<environment include="Development">

    <script src="~/lib/jquery-validate/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

    <!-- cldr scripts (needed for globalize) -->
    <script src="~/lib/cldrjs/cldr.min.js"></script>
    <script src="~/lib/cldrjs/cldr/event.min.js"></script>
    <script src="~/lib/cldrjs/cldr/supplemental.min.js"></script>

    <!-- globalize scripts -->
    <script src="~/lib/globalize/globalize.min.js"></script>
    <script src="~/lib/globalize/globalize/number.min.js"></script>
    <script src="~/lib/globalize/globalize/plural.min.js"></script>
    <script src="~/lib/globalize/globalize/currency.min.js"></script>

    <script src="~/lib/jquery-validation-globalize/jquery.validate.globalize.min.js"></script>

    @inject Microsoft.AspNetCore.Hosting.IHostingEnvironment HostingEnvironment
    @{
        string GetDefaultLocale() {
            const string localePattern = "lib/cldrjs/cldr/main/{0}";
            var currentCulture = System.Globalization.CultureInfo.CurrentCulture;
            var cultureToUse = "et"; //Default regionalisation to use

            if (System.IO.Directory.Exists(System.IO.Path.Combine(HostingEnvironment.WebRootPath, string.Format(localePattern, currentCulture.Name))))
                cultureToUse = currentCulture.Name;
            else if (System.IO.Directory.Exists(System.IO.Path.Combine(HostingEnvironment.WebRootPath, string.Format(localePattern, currentCulture.TwoLetterISOLanguageName))))
                cultureToUse = currentCulture.TwoLetterISOLanguageName;

            return cultureToUse;
        }
    }

    <script type="text/javascript">
    var culture = "@GetDefaultLocale()";
    $.when(
        $.get("/lib/cldrjs/cldr/supplemental/likelySubtags.json"),
        $.get("/lib/cldrjs/cldr/main/" + culture + "/numbers.json"),
        $.get("/lib/cldrjs/cldr/supplemental/numberingSystems.json"),
        $.get("/lib/cldrjs/cldr/supplemental/plurals.json"),
        $.get("/lib/cldrjs/cldr/supplemental/ordinals.json"),
        $.get("/lib/cldrjs/cldr/main/" + culture + "/currencies.json"),
        $.get("/lib/cldrjs/cldr/supplemental/currencyData.json")
    ).then(function () {
        // Normalize $.get results, we only need the JSON, not the request statuses.
        return [].slice.apply(arguments, [0]).map(function (result) {
            return result[0];
        });
    }).then(Globalize.load).then(function () {
        Globalize.locale(culture);
    });
    </script>

</environment>
<environment exclude="Development">

    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.0/dist/jquery.validate.min.js"
            asp-fallback-src="~/lib/jquery-validate/jquery.validate.min.js"
            asp-fallback-test="window.jQuery && window.jQuery.validator"
            crossorigin="anonymous"
            integrity="sha384-jR1IKAba71QSQwPRf3TY+RAEovSBBqf4Hyp7Txom+SfpO0RCZPgXbINV+5ncw+Ph">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"
            asp-fallback-src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"
            asp-fallback-test="window.jQuery && window.jQuery.validator && window.jQuery.validator.unobtrusive"
            crossorigin="anonymous"
            integrity="sha384-R3vNCHsZ+A2Lo3d5A6XNP7fdQkeswQWTIPfiYwSpEP3YV079R+93YzTeZRah7f/F">
    </script>

    <!-- cldr scripts (needed for globalize) -->
    <script src="~/lib/cldrjs/cldr.min.js"></script>
    <script src="~/lib/cldrjs/cldr/event.min.js"></script>
    <script src="~/lib/cldrjs/cldr/supplemental.min.js"></script>

    <!-- globalize scripts -->
    <script src="~/lib/globalize/globalize.min.js"></script>
    <script src="~/lib/globalize/globalize/number.min.js"></script>
    <script src="~/lib/globalize/globalize/plural.min.js"></script>
    <script src="~/lib/globalize/globalize/currency.min.js"></script>

    <script src="~/lib/jquery-validation-globalize/jquery.validate.globalize.min.js"></script>
</environment>
